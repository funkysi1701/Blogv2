name: $(BuildDefinitionName)-$(SourceBranchName)-$(date:yyyyMMdd)$(Rev:.r)

trigger:
- main

pool:
  vmImage: windows-2022

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonaClouds'
    organization: 'funkysi1701'
    scannerMode: 'MSBuild'
    projectKey: 'funkysi1701_Blogv2'
    projectName: 'Blogv2'
    projectVersion: '$(Build.BuildId)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: 'Blog.sln'
    feedsToUse: 'select'
    vstsFeed: '/2c2a6a60-448c-4153-a1be-d2ce39bfbb0d'

- task: DotNetCoreCLI@2
  displayName: 'Build Web'
  inputs:
    command: 'build'
    projects: 'Blog.sln'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Build Func'
  inputs:
    command: 'build'
    projects: 'Blog.Func/Blog.Func.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Build TimerFunction'
  inputs:
    command: 'build'
    projects: 'Blog.TimerFunction/Blog.TimerFunction.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'Blog.Func/Blog.Func.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:SourceRevisionId=$(Build.SourceVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'Blog.TimerFunction/Blog.TimerFunction.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:SourceRevisionId=$(Build.SourceVersion)'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)/a/Blog.Func.zip'
    artifact: 'func'
    publishLocation: 'pipeline'    
- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
- task: lighthouse-ci@1
  displayName: 'lh healthcheck'
  inputs:
    command: 'healthcheck'
    targetArtifactPath: '$(Pipeline.Workspace)/s/'
    configFilePath: '$(Pipeline.Workspace)/s/lighthouserc.json'
    parameters: '--token $(LHCI_TOKEN) --githubToken $(GITHUB)'
- task: lighthouse-ci@1
  displayName: 'lh collect'
  inputs:
    command: 'collect'
    targetArtifactPath: '$(Pipeline.Workspace)/s/'
    configFilePath: '$(Pipeline.Workspace)/s/lighthouserc.json'
    parameters: '--token $(LHCI_TOKEN) --githubToken $(GITHUB)'
- task: lighthouse-ci@1
  displayName: 'lh assert'
  inputs:
    command: 'assert'
    targetArtifactPath: '$(Pipeline.Workspace)/s/'
    configFilePath: '$(Pipeline.Workspace)/s/lighthouserc.json'
    parameters: '--token $(LHCI_TOKEN) --githubToken $(GITHUB)'
  continueOnError: true  
- task: lighthouse-ci@1
  displayName: 'lh upload'
  inputs:
    command: 'upload'
    targetArtifactPath: '$(Pipeline.Workspace)/s/'
    configFilePath: '$(Pipeline.Workspace)/s/lighthouserc.json'
    parameters: '--token $(LHCI_TOKEN) --githubToken $(GITHUB)'